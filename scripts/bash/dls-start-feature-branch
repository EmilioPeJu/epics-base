#!/bin/bash

# start-feature-branch
# $Revision$
# $Author$

# Arguments
# $1 name of module
# $2 name of branch to be created

function usage() {
    echo "$(basename $0) <module name> <branch name>"
}

if [ $# != 2 ]; then
    usage
    exit
fi

if [ "x$SVN_ROOT" == "x" ]; then
    echo "SVN_ROOT environment variable must be set"
    exit
fi

# Check for existence of this module in various places in the repository
svn list $SVN_ROOT/diamond/trunk/support/$1 >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Repository doesn't contain the $1 module. Sorry!"
    exit
fi

svn list $SVN_ROOT/diamond/branches/support/$1 >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Creating $1 branches area"
    svn mkdir $SVN_ROOT/diamond/branches/support/$1 -m "Created $1 branches area"
fi

echo "Creating branch of $1 called $2"
# Create the branch, and parse the output for the revision number generated.
# It ends in a '.' so this needs to be stripped off.
BRANCH_REV=$(svn copy $SVN_ROOT/diamond/trunk/support/$1 $SVN_ROOT/diamond/branches/support/$1/$2 -m "Created branch: $1/$2" | awk '/Committed revision/ {print substr($3,0,length($3)-1)}')
echo "Committed revision $BRANCH_REV."

# Set a property that tells us how far up the trunk we have merged into this
# branch. We start off (obviously) at the branch point.

# This has to be done by checking out, setting the property, then committing
echo "Marking branch with branch point revision for info during later merges"
TEMPDIR=/tmp/svn$$
svn checkout --quiet $SVN_ROOT/diamond/branches/support/$1/$2 $TEMPDIR
pushd $TEMPDIR >&/dev/null
svn propset dls:synced-from-trunk $BRANCH_REV .
svn commit --quiet -m "$1/$2: Setting synced-from-trunk property"
popd >&/dev/null
rm -rf $TEMPDIR

# See if it is a working copy, and the right one
svn info 2>/dev/null | grep "^URL: $SVN_ROOT/diamond/trunk/support/$1$" >/dev/null
if [ $? -eq 0 ]; then
    if ! svn status -u | grep '\*'; then
	echo
	read -p "Do you want to switch the current working directory onto this branch? "
	case $REPLY in
	    y|Y|yes|Yes)
		echo "Switching working copy to branch $2"
		svn switch --quiet $SVN_ROOT/diamond/branches/support/$1/$2
		svn update
		exit
		;;
	    *)
		echo "NOT switching this working copy to the branch"
		;;
	esac
    else
	echo "Working copy has outstanding changes in trunk - cannot switch"
    fi
fi

echo
echo "To create a working directory from this new branch, run:"
echo "svn checkout \$SVN_ROOT/diamond/branches/support/$1/$2 [working path]"
