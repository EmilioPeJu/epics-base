#!/bin/bash

# sync-from-trunk script
# $Revision$
# $Author$

# Arguments
# None. Must be run in the working copy of a branch

if [ "x$SVN_ROOT" == "x" ]; then
    echo "SVN_ROOT environment variable must be set"
    exit
fi

# Pull out module name from working dir and check that it is on a branch
# Note s///p delimiters below are '?' to avoid horribly escaped /'s
BRANCH=$(svn info 2>&1 | sed -n -e "s?^URL: $SVN_ROOT/diamond/branches/support/??p")

if [ -z "$BRANCH" ]; then
    echo "You must run $(basename $0) in a working copy of a feature branch"
    exit
fi

MERGE_FROM=$(svn propget dls:synced-from-trunk $SVN_ROOT/diamond/branches/support/$BRANCH)

MODULE=$(echo $BRANCH | sed -e 's?/.*$??')

if [ -z "$MERGE_FROM" ]; then
#    echo "Merge point information not available - trying to find branch point"
    echo "Merge point information not available - aborting"
    exit
    # Get branch point into MERGE_FROM

#    if [ -z "$MERGE_FROM" ]; then
#	echo "Could not find branch point. Sorry!"
#	exit
#    fi
#    read -p "About to ... "
#    # Prompt for confirmation
fi    

svn merge -r$MERGE_FROM:HEAD $SVN_ROOT/diamond/trunk/support/$MODULE .

# Get the repository latest revision
TRUNK_REV=$(svn status -u | awk '/Status against revision/ {print $4}')

# Update the property that tells us how far up the trunk we have merged into
# this branch.
svn propset dls:synced-from-trunk $TRUNK_REV .

echo "Done"
