#!/bin/env python

import os, sys, shutil
from optparse import OptionParser
from dlsxmlexcelparser import *
from dls_generate_edm_macros import *
from dls_generate_edm_autofill import *
from dls_generate_edm_sum import *
from dls_generate_edm_vac import gen_edm_vac
from dlsxmlparserfunctions import table_handler

####################
# hardcoded fields #
####################
# suffix for temp, flow, overview input and output suffixes
overview_in_str="-overview-src"
overview_out_str="-overview"
temp_out="-temp.edl"
flow_out="-flow.edl"
va_table_name="!GUI-VA"
mo_table_name="!GUI-MO"
out_dir="."
in_dir=".."

##############
# initialise #
##############
ioc = ""
bug = False
overview_files = []

# print text if bug-fixing flag is set
def bugprint(text):
	global bug
	if bug:
		print text

# print error text
def errorprint(text):
	print>>sys.stderr, text
	sys.exit(1)

# import xml file and call 
def main():
	global overview_in
	global overview_out
	global temp_out
	global flow_out
	global va_table_name
	global mo_table_name
	global out_dir
	global ioc
	global bug

	parser = OptionParser("usage: %prog [options] <dom> <xml-file>")
	parser.add_option("-m", action="store_true", dest="macro", help="Exports the edm device macro substitution files to <device>.sub")
	parser.add_option("-o", action="store_true", dest="overview", help="Exports an autofilled overview screen for any edl file containing "+overview_in_str)
	parser.add_option("-t", action="store_true", dest="temp", help="Exports an autogenerated temperature screen <dom>"+temp_out)
	parser.add_option("-f", action="store_true", dest="flow", help="Exports an autogenerated water flow screen <dom>"+flow_out)
	parser.add_option("-v", action="store_true", dest="vac", help="Exports an autogenerated vacuum screen (filenames listed in spreadsheet)")
	parser.add_option("-i", "--ioc", dest="ioc", metavar="IOC", help="Filter output on IOC (if IOCfield contains <ioc> process row)")
	parser.add_option("-d", "--dir", dest="dir", metavar="DIR", help="The output directory (default is %s)"%out_dir)
	parser.add_option("-b", action="store_true", dest="bug", help="Turns on bug-fixing messages")

	# parse arguments
	(options, args) = parser.parse_args()
	if len(args) != 2:
		errorprint("Incorrect number of arguments. Type %prog -h for help")

	# parse xml file
	xml = args[1]
	data = ExcelHandler()
	parse(xml, data)		
	
	# set the domain
	dom = args[0]

	# set the output directory
	if options.dir:
		out_dir = options.dir

	# set the ioc filter
	bug = options.bug
	if options.ioc:
		ioc = options.ioc
		bugprint("Outputting results for ioc: "+ioc)

	# create a row_handler object containing the defaults
	Table_handler = table_handler(out_dir,ioc,bug)
	
	# process each sheet in the xml file
	print """-----------------------------------------------------------------------------
Creating edm files from: %s
-----------------------------------------------------------------------------""" % xml
	if options.dir and not os.path.isdir(out_dir):
		bugprint("Making directory: "+out_dir)
		os.mkdir(out_dir)
	if options.overview:
		for f in os.listdir(in_dir):
			if f.find(overview_in_str)>-1 and f.find(".edl")>-1 and f.find(".edl~")==-1:
				if os.path.isfile(out_dir+"/"+f.replace(overview_in_str,overview_out_str)):
					os.remove(out_dir+"/"+f.replace(overview_in_str,overview_out_str))
					bugprint("Replaced "+f.replace(overview_in_str,overview_out_str))
				overview_files.append(f.replace(overview_in_str,overview_out_str))
				shutil.copy(in_dir+"/"+f,out_dir+"/"+f.replace(overview_in_str,overview_out_str))
	for name,table in data.tables:
		bugprint("Processing sheet: "+name)
		if name.find(" ")>-1:
			errorprint("Sheet names must not contain spaces: %s" % name)
		if name==mo_table_name:
			if options.macro:
				bugprint("Creating EDM macro substitution files")
				gen_edm_macros(table,Table_handler)
			if options.overview:
				bugprint("Autofilling EDM overview screens: Motion")
				for f in overview_files:
					gen_edm_autofill(table,Table_handler,f)
			if options.temp:
				bugprint("Creating EDM temperature screen")
				gen_edm_sum(table,Table_handler,dom+temp_out,dom,"Temperature Summary","temp")	
			if options.flow:
				bugprint("Creating EDM water flow screen")
				gen_edm_sum(table,Table_handler,dom+flow_out,dom,"Water Flow Summary","flow")	
		if name==va_table_name:
			if options.overview:
				bugprint("Autofilling EDM overview screens: Vacuum")
				for f in overview_files:
					gen_edm_autofill(table,Table_handler,f)
			if options.vac:
				bugprint("Creating EDM vacuum screens")
				gen_edm_vac(table,Table_handler)
	if options.overview:
		for f in overview_files:
			os.chmod(out_dir+"/"+f,0555)
	if options.temp:
		os.chmod(out_dir+"/"+dom+temp_out,0555)
	if options.flow:
		os.chmod(out_dir+"/"+dom+flow_out,0555)
	# print error messages
	for key in Table_handler.unsubbed_names.keys():
		print "***Warning: %s remains unsubstituted in %s***"%(key,Table_handler.unsubbed_names[key])
	# close output files
	Table_handler.closef()

if __name__ == "__main__":
    main()
